<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.UserMapper">

    <!-- Result Map -->
    <resultMap id="userResultMap" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="age" column="age"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 모든 사용자 조회 -->
    <select id="findAll" resultMap="userResultMap">
        SELECT id, name, email, age, created_at, updated_at
        FROM users
        ORDER BY created_at DESC
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="findById" parameterType="long" resultMap="userResultMap">
        SELECT id, name, email, age, created_at, updated_at
        FROM users
        WHERE id = #{id}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" parameterType="string" resultMap="userResultMap">
        SELECT id, name, email, age, created_at, updated_at
        FROM users
        WHERE email = #{email}
    </select>

    <!-- 사용자 생성 -->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email, age, created_at, updated_at)
        VALUES (#{name}, #{email}, #{age}, NOW(), NOW())
    </insert>

    <!-- 사용자 수정 -->
    <update id="update" parameterType="User">
        UPDATE users
        SET name = #{name},
            email = #{email},
            age = #{age},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 전체 사용자 수 조회 -->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM users
    </select>

</mapper> 